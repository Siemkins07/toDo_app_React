{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","_this","handleDate","e","setState","target","value","handleCheckbox","handleText","handleClick","_this$state","length","props","add","alert","maxDate","this","react_default","a","createElement","className","type","placeholder","onChange","id","style","color","htmlFor","min","max","onClick","Component","Task","_props$task","task","active","important","finishDate","done","delete","finish","toLocaleString","TaskList","tasks","filter","sort","b","activeTasks","map","src_components_Task","key","doneTasks","Fragment","fontSize","fontFamily","marginTop","App","counter","deleteTask","console","log","Object","toConsumableArray","changeActiveStatus","Array","from","forEach","getTime","addTask","prevState","concat","textDecoration","src_components_AddTask","components_TaskList","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.571e61bb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './AddTask.css'\r\n\r\nclass AddTask extends Component {\r\n    minDate = new Date().toISOString().slice(0, 10);\r\n    state = {\r\n        text: '',\r\n        checked: false,\r\n        date: this.minDate\r\n    }\r\n\r\n    handleDate = (e) => {\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCheckbox = (e) => {\r\n        this.setState({\r\n            checked: e.target.checked\r\n        })\r\n    }\r\n\r\n    handleText = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { text, date, checked } = this.state;\r\n        if (text.length > 2) {\r\n            const add = this.props.add(text, date, checked)\r\n            if (add) {\r\n                this.setState({\r\n                    text: '',\r\n                    checked: false,\r\n                    date: this.minDate\r\n                })\r\n            }\r\n        } else {\r\n            alert(\"Opis zadania to minimum 3 znaki\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n        maxDate = maxDate + \"-12-31\";\r\n\r\n        return (\r\n\r\n            <div className='form'>\r\n                <input type=\"text\" placeholder='Dodaj zadanie' value={this.state.text} onChange={this.handleText} />\r\n                <input type=\"checkbox\" checked={this.state.checked} id=\"important\" onChange={this.handleCheckbox} />\r\n                <label style={{ color: \"orange\" }} htmlFor=\"important\">Priorytet</label>\r\n                <br />\r\n                <label htmlFor=\"date\"></label>\r\n                <input type=\"date\" value={this.state.date} min={this.minDate} max={maxDate} onChange={this.handleDate} />\r\n                <button onClick={this.handleClick}>Dam radę!</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport './Task.css';\r\n\r\nconst Task = (props) => {\r\n\r\n    const style = {\r\n        color: 'orange'\r\n    }\r\n    const { text, date, id, active, important, finishDate } = props.task;\r\n\r\n    if (active) {\r\n        return (\r\n            <div className='taskActive'>\r\n                <p>\r\n                    <strong style={important ? style : null}>{text}</strong> | <span>{date} </span>\r\n                    <button onClick={() => props.done(id)}\r\n                    >Pyk!</button>\r\n                    <button onClick={() => props.delete(id)}>X</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    } else {\r\n        const finish = new Date(finishDate).toLocaleString()\r\n\r\n        return (\r\n            <div className=\"taskDone\">\r\n                <p>\r\n                    <strong>{text}</strong> <em>(do {date})</em><br />\r\n                    - wykonano <span>{finish} </span>\r\n                    <button onClick={() => props.delete(id)}>X</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\n\r\nconst TaskList = (props) => {\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n\r\n    if (active.length >= 2) {\r\n        active.sort((a, b) => {\r\n\r\n            a = a.date\r\n            b = b.date\r\n\r\n            if (a < b) return -1;\r\n            if (a > b) return 1;\r\n            return 0\r\n        })\r\n    }\r\n\r\n    if (done.length >= 2) {\r\n        done.sort((a, b) => b.finishDate - a.finishDate)\r\n    }\r\n\r\n    const activeTasks = active.map(task => <Task key={task.id}\r\n        task={task} delete={props.delete} done={props.done} />)\r\n    const doneTasks = done.map(task => < Task key={task.id} task={task} delete={props.delete}\r\n    />)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"active\" >\r\n                <h2>Zadania do zrobienia </h2> {\r\n                    activeTasks.length > 0 ? activeTasks : <p> Twoja lista jest pusta. Dodaj nowe wyzwanie!</p>}\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"done\">\r\n                <h2 > Zadania wykonane({doneTasks.length}) </h2> {\r\n                    <span style={{\r\n                        fontSize: '12px',\r\n                        fontFamily: \"tahoma\",\r\n                        marginTop: \"-30px\"\r\n                    }}>{doneTasks}</span>}  {\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport './App.css';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList'\nclass App extends Component {\n  counter = 7\n  state = {\n    tasks: [\n      // {\n      //   id: 0,\n      //   text: 'Wykonać to do app',\n      //   date: '2019-06-06',\n      //   important: true,\n      //   active: true,\n      //   finishDate: null\n      // },\n    ]\n  }\n\n  deleteTask = (id) => {\n    console.log('delete' + id);\n    let tasks = [...this.state.tasks];\n    tasks = tasks.filter(task => task.id !== id)\n\n    this.setState({\n      tasks\n    })\n  }\n\n  changeActiveStatus = (id) => {\n    console.log('done' + id);\n    const tasks = Array.from(this.state.tasks)\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n        console.log(task.finishDate);\n      }\n    })\n    this.setState({\n      tasks\n    })\n  }\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null\n    }\n    this.counter++\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }))\n    return true\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1 style={{ textDecoration: \"underline\" }}>Lista zadań do końca 2020</h1>\n        <AddTask add={this.addTask} />\n        <TaskList tasks={this.state.tasks} delete={this.deleteTask} done={this.changeActiveStatus} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}